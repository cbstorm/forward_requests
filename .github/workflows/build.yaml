name: Docker build
on:
  push:
    branches:
      - master
jobs:
  build:
    strategy:
      matrix:
        go-version: [1.18.x]
        platform: [ubuntu-latest]
    
    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Login Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
    
    - name: Pull and retag old image
      run: | 
        NEW_DATE=$(date +%s)
        docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}:latest
        docker tag ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}:$NEW_DATE
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}:$NEW_DATE
        echo "Pushed image $(${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}:$NEW_DATE)"

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
      id: buildx

    - name: Cache Docker Image Layers
      uses: actions/cache@v2
      with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
              ${{ runner.os }}-buildx-
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      id: docker_build
      with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Verify
      run: echo ${{ steps.docker_build.outputs.digest }}